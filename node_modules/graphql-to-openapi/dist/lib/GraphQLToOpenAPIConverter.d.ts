import { GraphQLError, IntrospectionQuery, Source } from 'graphql';
export declare class NoOperationNameError extends Error {
    constructor(message: string);
}
export declare class MissingSchemaError extends Error {
    constructor(message: string);
}
export declare class UnknownScalarError extends Error {
    constructor(message: string);
}
export interface GraphQLToOpenAPIResult {
    readonly queryErrors?: readonly GraphQLError[];
    readonly error?: NoOperationNameError;
    readonly schemaError?: GraphQLError;
    openApiSchema?: any;
}
export declare class GraphQLToOpenAPIConverter {
    private schema?;
    private introspectionSchema?;
    private onUnknownScalar?;
    private scalarConfig?;
    private graphqlSchema;
    private schemaError;
    constructor(schema?: string | Source, introspectionSchema?: IntrospectionQuery, onUnknownScalar?: (s: string) => object, // eslint-disable-line @typescript-eslint/ban-types
    scalarConfig?: {
        [key: string]: object;
    });
    toOpenAPI(query: string | Source): GraphQLToOpenAPIResult;
}
